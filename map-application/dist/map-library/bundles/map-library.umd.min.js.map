{"version":3,"sources":["ng://map-library/lib/map-library.component.ts","ng://map-library/lib/map-library.service.ts","ng://map-library/lib/map-library.component.html","ng://map-library/lib/map-library.module.ts"],"names":["CONST","MapLibraryService","factory","ɵfac","providedIn","MapLibraryComponent","elem","this","mapLat","mapLng","mapZoom","onchange","EventEmitter","onselect","searchInputFocused","moveMode","handleIcon","handleMenuIcon","displayMenu","choiseMenu","navigate","navigateId","mapMarkers","prototype","ngAfterViewInit","_this","initMap","initInput","setMoveShift","setSearch","search","setMarker","marker","setTimeout","sendModifications","map","L.map","attributionControl","zoomControl","center","zoom","L.tileLayer","addTo","keyboard","disable","geocoder","L.Control","position","collapsed","placeholder","defaultMarkGeocode","setQuery","_geocode","_results","length","_geocodeResultSelected","_clearResults","cleanMarkers","i","forEach","element","id","text","generateIconMarker","L.marker","lat","lng","removeLayer","html","content","img","L.Marker","icon","L.DivIcon","className","iconSize","iconAnchor","ngOnChanges","changes","Object","keys","setView","keyEvent","event","handlingMenu","key","handlingNavigation","handlingMap","navigateMarker","sendSelectEvent","openMenu","setFocus","setFocusOut","changeMode","setNavigationMode","alert","closeMenu","getCenter","LAT_MAX","moveMap","ZOOM_MAX","zoomMap","moveShift","ZOOM_MIN","mapSize","getSize","centerPixel","project","topLeft","unproject","x","y","bottomRight","emit","view","top","left","bottom","right","selected","selectMenu","nativeElement","querySelector","style","background","findFirstRightElement","findFirstLeftElement","findFirstTopElement","findFirstBottomElement","newSelect","min_1","min_2","min_3","min_4","setPosition","coord","getZoom","setZoom","searchInput","searchBar","display","focus","blur","core","ɵɵdirectiveInject","ElementRef","selectors","hostBindings","rf","ctx","i0.ɵɵelementStart","i0.ɵɵelement","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵclassMapInterpolate1","i0.ɵɵclassMap","i0.ɵɵclassMapInterpolate2","MapLibraryModule","imports","declarations","exports"],"mappings":"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","sourcesContent":["import {\n  AfterViewInit,\n  Component,\n  HostListener,\n  ElementRef,\n  Output,\n  EventEmitter,\n  SimpleChanges\n} from \"@angular/core\";\nimport * as L from \"leaflet\";\nimport \"leaflet-control-geocoder\";\n\nexport enum CONST {\n  ZOOM_MAX = 18,\n  ZOOM_MIN = 2,\n  LAT_MAX = 85,\n}\n\n@Component({\n  selector: \"map-library\",\n  inputs: ['mapLat', 'mapLng', 'mapZoom', 'search', 'marker'],\n  templateUrl: \"./map-library.component.html\",\n  styleUrls: [\"./map-library.component.css\",],\n})\n\nexport class MapLibraryComponent implements AfterViewInit {\n\n  // input values\n  public mapLat: number = 45;\n  public mapLng: number = 5;\n  public mapZoom: number = 5;\n  public search: String;\n  public marker: any;\n\n  @Output() onchange = new EventEmitter<any>();\n  @Output() onselect = new EventEmitter<any>();\n\n  private map;\n  private geocoder;\n  private searchInput;\n  private searchBar;\n  private searchInputFocused = false;\n  private moveMode = true;\n  private moveShift;\n  public handleIcon = \"move\";\n  public handleMenuIcon = \"zoom\";\n  public displayMenu = \"\";\n  public choiseMenu = 1;\n  private navigate = false;\n  private navigateId = 0;\n\n  constructor(private elem: ElementRef) { }\n\n  ngAfterViewInit(): void {\n    // init map\n    this.initMap();\n    this.initInput();\n    this.setMoveShift();\n\n    // init display input request\n    this.setSearch(this.search);\n    this.setMarker(this.marker);\n    // send init event\n    setTimeout(() => {\n      this.sendModifications(\"\");\n    }, 2000)\n  }\n\n  private initMap(): void {\n    // init map\n    this.map = L.map(\"map\", {\n      attributionControl: false,\n      zoomControl: false,\n      center: [this.mapLat, this.mapLng],\n      zoom: this.mapZoom,\n    });\n    // display map\n    L.tileLayer(\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\").addTo(this.map);\n    // disable keyboard\n    this.map.keyboard.disable();\n    // add search box\n    this.geocoder = L.Control.geocoder({\n      position: \"topleft\",\n      collapsed: false,\n      placeholder: \"Recherche...\",\n      defaultMarkGeocode: true,\n    }).addTo(this.map);\n  }\n\n  private setSearch(search): void {\n    if (this.search) {\n      // load searching\n      this.geocoder.setQuery(search)._geocode()\n      // search the first element\n      setTimeout(() => {\n        if (this.geocoder._results && this.geocoder._results.length) {\n          this.geocoder._geocodeResultSelected(this.geocoder._results[0])\n          this.geocoder._clearResults();\n        }\n      }, 2000);\n    }\n  }\n\n  // display markers\n  private mapMarkers = [];\n  private setMarker(marker): void {\n\n    this.cleanMarkers();\n    let i = 0;\n    marker.forEach(element => {\n      if (\"lat\" in element && \"lng\" in element) {\n        element.id=i;\n        if (!element.text) {\n          this.mapMarkers[i] = L.marker([element.lat, element.lng])\n        } else {\n          this.mapMarkers[i] = this.generateIconMarker(element)\n        }\n        this.mapMarkers[i].addTo(this.map);\n        i++;\n      }\n    });\n  }\n\n  // remove all markers to display news\n  private cleanMarkers() {\n    for (let i = 0; i < this.mapMarkers.length; i++) {\n      this.map.removeLayer(this.mapMarkers[i]);\n    }\n  }\n\n  // generate Marker\n  private generateIconMarker(element) {\n\n    // set html form\n    let html = `<div id=\"marker_${element.id}\" style=\"background: white; border-radius:20px; position:absolute; padding:5px 10px 0 10px; text-align:center;\">\n              <div style=\"text-align:center; font-size:1.2em;\">${element.text}</div>\n              `+ (element.content ? `<span>${element.content}</span>` : ``) +\n      (element.img ? `<img style=\"width:60px\" src=\"${element.img}\"/>` : ``) + `\n            </div>`\n\n    // return leaflet marker\n    return new L.Marker([element.lat, element.lng], {\n      icon: new L.DivIcon({\n        className: '',\n        iconSize: [100, 70], // size of the icon\n        iconAnchor: [45, element.img ? 40 : 10],\n        html,\n      })\n    })\n  }\n\n  /*************** components attributes events *************/\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.map) {\n      switch (Object.keys(changes)[0]) {\n        case \"mapZoom\":\n        case \"mapLat\":\n        case \"mapLng\":\n          this.map.setView([this.mapLat, this.mapLng], this.mapZoom);\n          this.setMoveShift();\n          break;\n        case \"marker\":\n          this.setMarker(this.marker);\n          break;\n        case \"search\":\n          this.setSearch(this.search);\n          break;\n      }\n    }\n  }\n\n  /*************** keyboard event detect and functions *************/\n\n\n\n  @HostListener(\"window:keyup\", [\"$event\"])\n  keyEvent(event: KeyboardEvent) {\n\n    if (this.displayMenu != \"\") {\n      this.handlingMenu(event.key);\n\n    } else if(this.navigate){\n      this.handlingNavigation(event.key)\n\n    } else {\n      this.handlingMap(event.key)\n      // send change to parent application\n      this.sendModifications(event.key);\n    }\n  }\n\n  private handlingNavigation(key): void {\n    switch (key) {\n      case \"ArrowUp\":\n        this.navigateMarker(1,0)\n        break;\n      case \"ArrowDown\":\n        this.navigateMarker(-1,0)\n        break;\n      case \"ArrowRight\":\n        this.navigateMarker(0,1)\n        break;\n      case \"ArrowLeft\":\n        this.navigateMarker(0,-1)\n        break;\n      case \"Enter\":\n        // send change to parent application\n        if(this.marker[this.navigateId])\n          this.sendSelectEvent(this.marker[this.navigateId])\n        break;\n      case \"Escape\":\n        this.openMenu();\n        break;\n    }\n  }\n\n  private handlingMenu(key): void {\n    switch (key) {\n      case \"ArrowRight\":\n        this.choiseMenu++;\n        if (this.choiseMenu > 3) {\n          this.choiseMenu = 0;\n        }\n        break;\n      case \"ArrowLeft\":\n        this.choiseMenu--;\n        if (this.choiseMenu < 0) {\n          this.choiseMenu = 3;\n        }\n        break;\n      case \"Enter\":\n        // reset navigation mode\n        this.navigate=false;\n\n        if (this.choiseMenu == 0) {\n          this.setFocus()\n        } else {\n          this.setFocusOut();\n        } \n        if (this.choiseMenu == 1) {\n          this.setMarker(this.marker);\n          this.changeMode()\n\n        } else if(this.choiseMenu==2){\n          this.setNavigationMode()\n\n        } else if (this.choiseMenu == 3) {\n          alert(\"exit\")\n        }\n        this.closeMenu()\n        break;\n      case \"Escape\":\n        this.closeMenu();\n        break;\n    }\n  }\n\n  private handlingMap(key): void {\n    switch (key) {\n      case \"ArrowUp\":\n        if (this.moveMode) {\n          if (this.map.getCenter().lat < CONST.LAT_MAX) {\n            this.moveMap(1, 0);\n          }\n        } else {\n          if (this.mapZoom < CONST.ZOOM_MAX) {\n            this.zoomMap(1);\n            this.moveShift /= 2;\n          }\n        }\n        break;\n      case \"ArrowDown\":\n        if (this.moveMode) {\n          if (this.map.getCenter().lat > -CONST.LAT_MAX) {\n            this.moveMap(-1, 0);\n          }\n        } else {\n          if (this.mapZoom > CONST.ZOOM_MIN) {\n            this.zoomMap(-1);\n            this.moveShift *= 2;\n          }\n        }\n        break;\n      case \"ArrowRight\":\n        if (this.moveMode) {\n          this.moveMap(0, 1);\n        } else {\n        }\n        break;\n      case \"ArrowLeft\":\n        if (this.moveMode) {\n          this.moveMap(0, -1);\n        } else {\n        }\n        break;\n      case \"Enter\":\n        this.changeMode()\n        break;\n      case \"Escape\":\n        this.openMenu();\n        break;\n    }\n  }\n\n  // display move or zoom icon when press\n  private changeMode(): void {\n    this.moveMode = !this.moveMode;\n    if (this.moveMode) {\n      this.handleIcon = \"move\";\n      this.handleMenuIcon = \"zoom\"\n    } else {\n      this.handleIcon = \"zoom\";\n      this.handleMenuIcon = \"move\"\n    }\n  }\n\n  private sendModifications(key) {\n    // calcul map outline by container size and pixel progection\n    let mapSize = this.map.getSize();\n    let centerPixel = this.map.project([this.mapLat, this.mapLng], this.mapZoom)\n    let topLeft = this.map.unproject([centerPixel.x - mapSize.x / 2, centerPixel.y - mapSize.y / 2], this.mapZoom)\n    let bottomRight = this.map.unproject([centerPixel.x + mapSize.x / 2, centerPixel.y + mapSize.y / 2], this.mapZoom)\n\n    // send coordinates results\n    this.onchange.emit(\n      {\n        key: key,\n        zoom: this.mapZoom,\n        lat: this.mapLat,\n        lng: this.mapLng,\n        view: {\n          top: topLeft.lat,\n          left: topLeft.lng,\n          bottom: bottomRight.lat,\n          right: bottomRight.lng\n        }       \n      })\n  }\n\n  private sendSelectEvent(selected) {\n    this.onselect.emit(selected)\n  }\n\n  /*************** escape app functions *************/\n\n  private openMenu(): void {\n    this.displayMenu = \"show-menu\";\n  }\n\n  private closeMenu(): void {\n    this.displayMenu = \"\";\n    this.choiseMenu = 1;\n  }\n  // show escape message\n  private selectMenu(key): void {\n    if (key == \"Escape\") {\n      this.closeMenu()\n    } else {\n      //this.validEscape = false;\n    }\n  }\n\n  /*************** navigate between markers *************/\n\n  private setNavigationMode(): void{\n    this.navigate=true;\n    this.handleIcon = \"navigation\";\n    this.navigateMarker(0,0)\n    // define menu to move\n    this.moveMode = false\n    this.handleMenuIcon = \"move\"\n  }\n\n  private navigateMarker(lat, lng): void{\n    if(!this.marker.length){\n      return;\n    }\n    if(this.marker.length==1){\n      this.navigateId = 0;\n      this.elem.nativeElement.querySelector(\"#marker_\"+this.navigateId).style.background=\"orange\";\n      return;\n    }\n    if(this.navigateId > this.marker.length){\n      this.navigateId = 0;\n    }\n    if(lat!=0 || lng != 0){\n      // reset previous\n      this.elem.nativeElement.querySelector(\"#marker_\"+this.marker[this.navigateId].id).style.background=\"white\";    \n    }\n    // display new\n    if(lng>0){\n      this.findFirstRightElement();\n    }else if(lng<0){\n      this.findFirstLeftElement();\n    }else if(lat>0){\n      this.findFirstTopElement();\n    }else if(lat<0){\n      this.findFirstBottomElement();\n    }else {\n      this.navigateId=0\n    }\n    this.elem.nativeElement.querySelector(\"#marker_\"+this.navigateId).style.background=\"orange\";\n  }\n\n  private findFirstLeftElement(){\n    let selected = this.marker[this.navigateId];\n    let newSelect = this.marker[this.navigateId==0?1:0];\n    this.marker.forEach(element => {\n      if(element!=selected && element.lng < selected.lng && (element.lng > newSelect.lng || newSelect.lng > selected.lng)){\n        newSelect = element;\n      }\n    });\n    if(newSelect.lng >= selected.lng){\n      let min=this.marker[0]\n      this.marker.forEach(element => {\n        if(element.lng > min.lng){\n          min = element;\n        }\n      });\n      this.navigateId = min.id;\n    }else{\n      this.navigateId=newSelect.id\n    }\n  }\n\n  private findFirstRightElement(){\n    let selected = this.marker[this.navigateId];\n    let newSelect = this.marker[this.navigateId==0?1:0];\n    this.marker.forEach(element => {\n      if(element!=selected && element.lng > selected.lng && (element.lng < newSelect.lng || newSelect.lng < selected.lng)){\n        newSelect = element;\n      }\n    });\n    if(newSelect.lng <= selected.lng){\n      let min=this.marker[0]\n      this.marker.forEach(element => {\n        if(element.lng < min.lng){\n          min = element;\n        }\n      });\n      this.navigateId = min.id;\n    }else{\n      this.navigateId=newSelect.id\n    }\n  }\n\n  private findFirstBottomElement(){\n    let selected = this.marker[this.navigateId];\n    let newSelect = this.marker[this.navigateId==0?1:0];\n    this.marker.forEach(element => {\n      if(element!=selected && element.lat < selected.lat && (element.lat > newSelect.lat || newSelect.lat > selected.lat)){\n        newSelect = element;\n      }\n    });\n    if(newSelect.lat >= selected.lat){\n      let min=this.marker[0]\n      this.marker.forEach(element => {\n        \n        if(element.lat > min.lat){\n          min = element;\n        }\n      });\n      this.navigateId = min.id;\n    }else{\n      this.navigateId=newSelect.id\n    }\n  }\n    \n  private findFirstTopElement(){\n    let selected = this.marker[this.navigateId];\n    let newSelect = this.marker[this.navigateId==0?1:0];\n    this.marker.forEach(element => {\n      if(element!=selected && element.lat > selected.lat && (element.lat < newSelect.lat || newSelect.lat < selected.lat)){\n        newSelect = element;\n      }\n    });\n    if(newSelect.lat <= selected.lat){\n      let min=this.marker[0]\n      this.marker.forEach(element => {\n        if(element.lat < min.lat){\n          min = element;\n        }\n      });\n      this.navigateId = min.id;\n    }else{\n      this.navigateId=newSelect.id\n    }\n  }\n\n  /*************** set position, move and zoom functions *************/\n\n  // set new coordinates and handle zoom \n  private setPosition(): void {\n    let coord = this.map.getCenter();\n    this.mapLat = coord.lat;\n    this.mapLng = coord.lng;\n    this.mapZoom = this.map.getZoom();\n    // calcul new move size\n    this.setMoveShift();\n  }\n\n  // calcul new coordinates\n  private moveMap(lat, lng): void {\n    this.mapLat += lat * this.moveShift;\n    this.mapLng += lng * this.moveShift;\n    this.map.setView([this.mapLat, this.mapLng], this.mapZoom);\n  }\n\n  // update zoom\n  private zoomMap(zoom): void {\n    this.mapZoom += zoom;\n    this.map.setZoom(this.mapZoom);\n  }\n\n  // alter move padding\n  setMoveShift() {\n    this.moveShift = 80;\n    for (let i = 1; i < this.mapZoom; i++) {\n      this.moveShift /= 2;\n    }\n  }\n\n  /*************** search input functions *************/\n\n  // set input focus or blur\n  initInput() {\n    // select search input box\n    this.searchInput = this.elem.nativeElement.querySelector(\n      \".leaflet-control-geocoder-form input\"\n    );\n    this.searchBar = this.elem.nativeElement.querySelector(\n      \".leaflet-bar\"\n    );\n    this.setFocusOut();\n  }\n  setFocus() {\n    \n    this.searchBar.style.display = \"block\";\n    this.searchInput.focus();\n    this.searchInputFocused = true;\n  }\n  setFocusOut() {\n    this.searchInput.blur();\n    this.searchBar.style.display = \"none\";\n    this.searchInputFocused = false;\n\n    this.setPosition();\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapLibraryService {\n\n  constructor() { }\n}\n","<div class=\"map-container\">\n    <i class=\"icon {{handleIcon}}\"></i>\n    <div id=\"map\"></div>\n</div>\n<div class=\"menu-container\" class=\"{{displayMenu}}\">\n    <div class=\"menu-box\">\n        <i class=\"icon search {{(choiseMenu==0?'selected':'')}}\"></i>\n        <i class=\"icon {{handleMenuIcon}} {{(choiseMenu==1?'selected':'')}}\"></i>\n        <i class=\"icon navigation {{(choiseMenu==2?'selected':'')}}\"></i>\n        <i class=\"icon logout {{(choiseMenu==3?'selected':'')}}\"></i>\n    </div>  \n</div>","import { NgModule } from '@angular/core';\nimport { MapLibraryComponent } from './map-library.component';\n\n\n\n@NgModule({\n  declarations: [MapLibraryComponent],\n  imports: [\n  ],\n  exports: [MapLibraryComponent]\n})\nexport class MapLibraryModule { }\n"]}